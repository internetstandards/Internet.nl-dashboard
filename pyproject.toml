[tool.vulture]
exclude = ["tests/"]
ignore_decorators = ["@app.route", "@require_*"]
min_confidence = 100
paths = ["dashboard"]
sort_by_size = true
verbose = false

[tool.black]
line-length = 120

[tool.isort]
line_length = 120

[tool.pep8]
max-line-length = 120

[tool.pylama]
# temporary ignore these errors/warnings since pylama update (10-04-2018)
# until autopep8 is able to fix these automatically
# https://github.com/hhatto/autopep8/commit/eeb0ec07c274db82a19fc2f95f5053407f2ad47d
# https://github.com/hhatto/autopep8/issues/372
ignore="E252,W605"
skip = "dashboard/*/migrations/*.py"
linters = "pycodestyle,pyflakes"

[tool.pylama.linter.pycodestyle]
max_line_length = 120


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
lint.select = ["E", "F"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "**migrations**",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.pylint]
# https://github.com/ijl/orjson/issues/248
extension-pkg-whitelist = ["orjson"]

[tool.pylint.format]
# unused-argument disabled because of kwargs called consistently from the scanning framework
# fixme disable because documentation matters
# ingore basically everything in pylint as we come from not the best codebase. So just start somewhere. As we've
# experienced that unused_variable caused a serious issue, that one is mandatory.
# you can pick these off one by one
# no-self-use: Useless option value for '--disable', 'no-self-use' was moved to an optional extension
# http-response-with-content-type-json: ORjson does NOT work with djangos response type, it makes everything slower.
disable="missing-module-docstring,missing-class-docstring,missing-function-docstring,fixme,pointless-string-statement,no-name-in-module,duplicate-code,wrong-import-order,unused-argument,too-many-ancestors,too-many-statements,too-many-locals,too-many-nested-blocks,too-many-branches,too-few-public-methods,no-member,import-error,too-many-arguments,invalid-name,ungrouped-imports,protected-access,too-many-return-statements,too-many-instance-attributes,unsupported-binary-operation,abstract-method,too-many-lines,attribute-defined-outside-init,consider-using-with,broad-except,imported-auth-user,too-many-positional-arguments,http-response-with-content-type-json"
max-line-length = 120
extension-pkg-whitelist = "pydantic"
ignore = "tests,migrations"
# reports are very slow and hurt the development cycle
reports = false
output-format = "colorized"
jobs = 0
load-plugins = "pylint_django"
django-settings-module = "dashboard.settings"
